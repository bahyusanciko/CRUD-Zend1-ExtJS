<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title><?php $this->title ?></title>
    <link rel="stylesheet" type="text/css" href="<?php echo $this->baseUrl(); ?>/extjs/resources/css/ext-all.css" />
    <link rel="stylesheet" type="text/css" href="<?php echo $this->baseUrl(); ?>/extjs/examples/shared/example.css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.0/jquery.min.js"></script>
    <!-- GC -->
    <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">
    <script type="text/javascript" src="<?php echo $this->baseUrl(); ?>/extjs/ext-all.js"></script>
    <script type="text/javascript" >
    </script>
     <script type="text/javascript">
    
    Ext.require([
    'Ext.grid.*',
    'Ext.data.*',
    'Ext.util.*',
    'Ext.state.*'
    ]);
    Ext.define('admin', {
        extend: 'Ext.data.Model',
        fields: [
           {name: 'kd_admin'},
           {name: 'nama_admin'},
           {name: 'email_admin'},
           {name: 'no_hp_admin'}
        ],

        idProperty: 'admin'
    });
    
    Ext.onReady(function() {
        Ext.QuickTips.init();
        
        // setup the state provider, all state information will be saved to a cookie
        Ext.state.Manager.setProvider(Ext.create('Ext.state.CookieProvider'));

        // sample static data for the store
        var myData =
            <?php echo $this->data ?>
                    
        ;
       

        // create the data store
        var store = Ext.create('Ext.data.ArrayStore', {
            model: 'admin',
            data: myData,
            
        });
        
        var rowEditing = Ext.create('Ext.grid.plugin.RowEditing', {
	clicksToMoveEditor: 1,
	autoCancel: false,
	listeners: {
		validateedit: function(editor,e,opt){
//			console.log(e.newValues);  //Correct
                        $.ajax({
                            url: '<?php echo $this->baseUrl()?>/admin/updatejson',
                            type: 'post',
                            data: { data : JSON.stringify( e.newValues ) }, // Our valid JSON string
                            success: function( data, status, xhr ) {
                                Ext.Msg.alert("Alert", "Update Data Berhasil.");
                            },
                            error: function( xhr, status, error ) {
                               Ext.Msg.alert("Alert", "Update Data Gagal.");
                            }
                        });   
		}
	}
        });
        var grid = Ext.create('Ext.grid.Panel', {
            renderTo: document.body,
            plugins: [rowEditing],
            store: store,
            tbar: tolbar,
            buttons: [
            {
            type: 'submit',
            text: 'Logout',
            handler: function(){ 
            location.href = "<?php echo $this->baseUrl('/login/logout') ?>";
            }
            }],
            stateful: true,
            collapsible: false,
            multiSelect: true,
            stateId: 'stateGrid',
            columns: [
                {
                    text     : 'Kode Admin',
                    width    : 75,
                    sortable : true,
                    dataIndex: 'kd_admin',
                },
                {
                    text     : 'Nama Admin',
                    width    : 75,
                    sortable : true,
                    dataIndex: 'nama_admin',
                    field: {
                    xtype: 'textfield'
                    }
                },
                {
                    text     : 'Email Admin',
                    width    : 75,
                    sortable : true,
                    dataIndex: 'email_admin',
                    field: {
                    xtype: 'textfield'
                    }
                },
                {
                    text     : 'Nomor HP',
                    width    : 85,
                    sortable : true,
                    dataIndex: 'no_hp_admin',
                    field: {
                    xtype: 'textfield'
                    }
                },
                
                {
                    text     : 'Action',
                    menuDisabled: false,
                    sortable: false,
                    xtype: 'actioncolumn',
                    width: 50,
                    items: [{
                        icon   : '<?php echo $this->baseUrl(); ?>/extjs/examples/shared/icons/fam/delete.gif',  // Use a URL in the icon config
                        tooltip: 'Delete',
                        handler: function(grid, rowIndex, colIndex) {
                           Ext.Msg.confirm("Confirmation", "Do you want to Delete changes?", function(btnText){
                            if(btnText === "no"){
                                Ext.Msg.alert("Alert", "You have confirmed 'No'.");
                            }
                            else if(btnText === "yes"){
                                var rec = store.getAt(rowIndex);
                                location.href = "<?php echo $this->baseurl() ?>/admin/delete/id/"+ rec.get('kd_admin');
                                
                            }
                        }, this);
                     
                            
                        }
                    }
                    ]
                }
            ], 
            height: 350,
            width: 600,
            title: 'Table Admin',
            renderTo: 'grid-example',
            viewConfig: {
            stripeRows: true,
            enableTextSelection: true
            }
        });
    });
    
    var tolbar = Ext.create('Ext.toolbar.Toolbar', {
    id : 'form-id',
    renderTo: document.body,
    xtype: 'form',
    method: 'POST',
    width   : 50,
    frame: true,
    items: [{
            text: 'Reload Data',
            handler : function(){
            location.href = "<?php echo $this->baseUrl() ?>/admin/";  
            }
    },
        {   icon   : '<?php echo $this->baseUrl(); ?>/extjs/examples/shared/icons/fam/add.gif',
            text: 'Tambah Data',
            handler : function(){
            location.href = "<?php echo $this->baseUrl() ?>/admin/tambah";  
            }
        },
        // begin using the right-justified button container
        '->', // same as { xtype: 'tbfill' }
        {
        xtype     : 'combobox',
	emptyText: 'Cari Berdasarkan',
        id      : 'get',
	store     : ['Kode',
                    'Nama',
                    'Email',
                    'Nomor'
                    ],
        listeners: {
              select: function(text){
//               Ext.Msg.alert('alert', 'Cari Data ' +text.lastValue);  
//               console.log(text.lastValue)
              }
            }
        },
        
        {
            xtype    : 'textfield',
            name     : 'search',
            type    : 'text',
            emptyText: 'Cari Data',
            id      : 'search',
        },          
        {   
            icon   : '<?php echo $this->baseUrl(); ?>/extjs/docs/resources/images/preview.png',
            type: 'submit',
            handler: function(){ 
            Ext.Ajax.request({
                method: 'GET',
                url: '<?php echo $this->baseUrl('/admin/search/') ?>',
                standardSubmit: true,
                disableCaching: false,
                id  : 'cariget',
                success: function(response, opts) {
                    
                    if(response.responseText == '"kosong"'){
                        console.log(response);
                    	Ext.Msg.alert('alert', 'Data Tidak');                                                   
                    }else{
                        var getkod = Ext.getCmp('get').getValue();
                        location.href = "<?php echo $this->baseUrl('/admin/cari/') ?>"+ getkod + '/'+ response.request.options.params.name ; 
                        console.log(response.request.options.params.name);
                        console.log(Ext.getCmp('get').getValue())
                    }                    
                },
                failure: function() {
                    Ext.Msg.alert('', 'failed');
                },
                params: {
                    action: Ext.getCmp('get').getValue(),
                    name : Ext.getCmp('search').getValue(),
                }
            });
        }        
        }
    ]
});  
</script>
</head>
<body>
    <h1 align="center">Hai, <?php echo $this->user ?></h1>
   
    <div align="center" id="grid-example"></div>
</body>
</html>
