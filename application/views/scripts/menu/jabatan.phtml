<script type="text/javascript">
	 Ext.onReady(function() {

        // sample static data for the store
        var storejab  = new Ext.data.JsonStore({
         extend: 'Ext.data.Model',
                fields: [
                   {name: 'kd_jabatan',type: 'string'},
                   {name: 'nama_department',type: 'string'},
                   {name: 'nama_jabatan',type: 'string'},
                ],
          autoLoad: true,
          proxy:{
            type:'ajax',
            url:'<?php echo $this->baseUrl('/hr/jab'); ?>',
            reader:{
                 type:'json',
                 root:'jab'
                }
            }

        });
        var getdepstore  = new Ext.data.JsonStore({
         extend: 'Ext.data.Model',
                fields: [
                   {name: 'kd_department',type: 'string'},
                   {name: 'nama_department',type: 'string'},
                ],
          autoLoad: true,
          autoDestroy: true,
          proxy:{
            type:'ajax',
            url:'<?php echo $this->baseUrl('/hr/dep'); ?>',
            reader:{
                 type:'json',
                 root:'dep'
                }
            },
        });
        this.getdepstore = getdepstore; 
        this.storejab = storejab; 
        var rowEditingJab = Ext.create('Ext.grid.plugin.RowEditing', {
        clicksToMoveEditor: 1,
        autoCancel: false,
        listeners: {
        validateedit: function(editor,e,opt){
                        $.ajax({
                            url: '<?php echo $this->baseUrl()?>/hr/updatejab',
                            type: 'post',
                            data: { data : JSON.stringify( e.newValues ) }, // Our valid JSON string
                            success: function( data, status, xhr ) {
                                Ext.Msg.alert("Alert", "Update Data Berhasil.");
                                storejab.load();
                            },
                            error: function( xhr, status, error ) {
                               Ext.Msg.alert("Alert", "Update Data Gagal.");
                            }
                        });   
                     }
        }
        });
        var tambahjab = Ext.widget({
        xtype: 'form',
        layout: 'form',
        collapsible: false,
        frame: true,
        title: 'Tambah Jabatan',
        method:'POST',
        width: 750,
        renderTo: 'tambah-jabatan',
        defaultType: 'textfield',
        items: [
        {
            fieldLabel: 'Pilih Devisi',
            queryMode: 'remote',
            typeAhead: true,
            id : 'combodev',
            forceSelection: true,
            displayField: 'nama_department', // <-- Add this 
            valueField: 'kd_department',
            type : 'text',
            xtype : 'combo',
            name: 'devisi',
            triggerAction: 'all',
            emptyText: 'Pilih Devisi',
            store : getdepstore,
            selectOnFocus: true, 
            listeners: {
                expand: function() {
                    getdepstore.load();
                }
            }
        },
        {
            fieldLabel: 'Nama jabatan',
            type : 'text',
            name: 'jabatan',
            allowBlank: false,
        },
        ],

        buttons: [
        {
            type: 'submit',
            text: 'Tambah',
            handler: function(){ insertjab(); }
        }],

    });
      var insertjab = function(){
      if(tambahjab.getForm().isValid()){
                Ext.Msg.confirm("Confirmation", "Do you want to Tambah changes?", function(btnText){
                if(btnText === "no"){
                    Ext.Msg.alert("Alert", "You have confirmed 'Tambah'.");
                }
                else if(btnText === "yes"){
                  tambahjab.getForm().submit({
                  method:'POST',
                  url: '<?php echo $this->baseUrl() ?>/hr/insertjab',
                  waitMsg: 'Processing Request',
                  failure:function(form, action){
                    if(action.response.responseText == '"Success"'){
                        Ext.Msg.alert('Berhasil', 'Tambah Department', Ext.emptyFn);
                        storejab.load();                                          
                    }else{
                       Ext.Msg.alert('Salah', 'gagal Tambah', Ext.emptyFn);
                    }
                    tambahjab.getForm().reset();
                }


              });
                            }
                        }, this);
        }
          };

        var gridjab = Ext.create('Ext.grid.Panel', {
            plugins: [rowEditingJab],
            store :storejab,
            tbar: toolbarjab,
            stateful: true,
            collapsible: false,
            multiSelect: true,
            stateId: 'stateGrid',
            columns: [
                {
                    header     :'Kode Jabatan',
                    flex     : 1,
                    sortable : false,
                    dataIndex: 'kd_jabatan',
                },
                {
                    header     :'Nama Department',
                    width    : 75,
                    sortable : false,
                    dataIndex: 'nama_department',
                    field: {
                    xtype: 'textfield',
                    queryMode: 'local',
                    typeAhead: true,
                    forceSelection: true,
                    displayField: 'nama_department', // <-- Add this 
                    valueField: 'kd_department',
                    xtype : 'combo',
                    name: 'devisi',
                    emptyText: 'Pilih Devisi',
                    store : getdepstore,
                    }
                },
                 {
                    header     :'Nama Jabatan',
                    width    : 75,
                    sortable : true,
                    dataIndex: 'nama_jabatan',
                    field: {
                    xtype: 'textfield',
                    }
                },
                {
                    header     : 'Action',
                    menuDisabled: false,
                    sortable: false,
                    xtype: 'actioncolumn',
                    width: 50,
                    items: [{
                        icon   : '<?php echo $this->baseUrl(); ?>/extjs/examples/shared/icons/fam/delete.gif',  // Use a URL in the icon config
                        tooltip: 'Delete',
                        handler: function(grid, rowIndex, colIndex) {
                           Ext.Msg.confirm("Confirmation", "Do you want to Delete changes?", function(btnText){
                            if(btnText === "no"){
                                Ext.Msg.alert("Alert", "You have confirmed 'No'.");
                            }
                            else if(btnText === "yes"){
                                 var rec = storejab.getAt(rowIndex);
                                 Ext.Ajax.request({
                                    method: 'POST',
                                    url: '<?php echo $this->baseUrl('/hr/deletejab/') ?>',
                                    standardSubmit: true,
                                    disableCaching: false,
                                    id  : 'deleteget',
                                    success: function(response, opts) {
                                        storejab.load();
                                        if(response.responseText == '"Failed"'){
                                            Ext.Msg.alert('alert', 'Data Tidak');                                                   
                                        }else{
                                            Ext.Msg.alert('alert', 'Data Berhasil Di hapus');
                                        }                    
                                    },
                                    failure: function() {
                                        Ext.Msg.alert('', 'Gagal Terhubung Server Database');
                                    },
                                    params: {
                                        action: 'delete',
                                        name : rec.get('kd_jabatan'),
                                    }
                                });
                                
                            }
                        }, this);
                     
                            
                        }
                    }
                    ]
                }
            ], 
            height: 350,
            width: 780,
            title: 'Table Jabatan',
            renderTo: 'grid-jabatan',
            viewConfig: {
            stripeRows: true,
            enableTextSelection: true,
            }
        });
    });
    var searchdep  = new Ext.data.JsonStore({
         extend: 'Ext.data.Model',
                fields: [
                   {name: 'kd_search',type: 'string'},
                   {name: 'nama_search',type: 'string'},
                ],
          autoLoad: true,
          autoDestroy: true,
          proxy:{
            type:'ajax',
            url:'<?php echo $this->baseUrl('/erp/tree-search.json'); ?>',
            reader:{
                 type:'json',
                 root:'dep'
                }
            },
        });
    var toolbarjab = Ext.create('Ext.toolbar.Toolbar', {
    id : 'jab-id',
    renderTo: document.body,
    xtype: 'form',
    method: 'POST',
    width   : 50,
    frame: true,
    items: [{
            text: 'Reload Data',
            handler : function(){
            storejab.load(); 
            }
        },
        // begin using the right-justified button container
        {
        xtype     : 'combobox',
        emptyText: 'Cari Berdasarkan',
        id      : 'getjab1',
        store     : searchdep,
        displayField: 'nama_search', // <-- Add this 
        valueField: 'kd_search',
        listeners: {
              select: function(text){
            //Ext.Msg.alert('alert', 'Cari Data ' +text.lastValue);  
            // console.log(text.lastValue);
              }
            }
        }, 
        {
            xtype    : 'textfield',
            name     : 'search',
            type    : 'text',
            emptyText: 'Cari Data',
            id      : 'searchjab1',
        },
        {
        xtype     : 'combobox',
        emptyText: 'Cari Berdasarkan',
        id      : 'getjab2',
        store     : searchdep,
        displayField: 'nama_search', // <-- Add this 
        valueField: 'kd_search',
        listeners: {
              select: function(text){
//               Ext.Msg.alert('alert', 'Cari Data ' +text.lastValue);  
              // console.log(text.lastValue);
              }
            }
        },
        
        {
            xtype    : 'textfield',
            name     : 'search',
            type    : 'text',
            emptyText: 'Cari Data',
            id      : 'searchjab2',
        },          
        {   
            icon   : '<?php echo $this->baseUrl(); ?>/extjs/docs/resources/images/preview.png',
            type: 'submit',
            handler: function(){ 
            Ext.Ajax.request({
                method: 'GET',
                url: '<?php echo $this->baseUrl('/hr/searchjab/') ?>',
                standardSubmit: true,
                disableCaching: false,
                id  : 'cariget',
                success: function(response, opts) {
                    
                    if(response.responseText == '"kosong"'){
                        Ext.Msg.alert('alert', 'Data Tidak');                                                   
                    }else{
                        storejab.clearData();
                        storejab.loadRawData(Ext.JSON.decode(response.responseText), true);
                    }                    
                },
                failure: function() {
                    Ext.Msg.alert('', 'failed');
                },
                params: {
                    action1 : Ext.getCmp('getjab1').getValue(),
                    action2 : Ext.getCmp('getjab2').getValue(),
                    search1 : Ext.getCmp('searchjab1').getValue(),
                    search2 : Ext.getCmp('searchjab2').getValue(),
                }
            });
        }        
        }
    ]
}); 
</script>
 <div align="left" id="tambah-jabatan"></div>
            <br>
<div align="left" id="grid-jabatan"></div>